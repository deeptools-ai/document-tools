[tool]
[tool.poetry]
name = "document-tools"
version = "0.1.0"
homepage = "https://github.com/deeptools-ai/document-tools"
description = "ðŸ”§ Tools to automate your document understanding tasks."
authors = ["deeptools.ai <contact@deeptools.ai>"]
readme = "README.md"
license =  "Apache-2.0"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "document_tools" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
datasets = "^2.3.2"
Pillow = "^9.1.1"
transformers = "^4.20.0"

black = { version = "22.3.0", optional = true}
isort  = { version = "^5.10.1", optional = true}
flake8  = { version = "^3.9.2", optional = true}
flake8-docstrings = { version = "^1.6.0", optional = true }
mypy = {version = "^0.961", optional = true}
pytest  = { version = "^7.1.2", optional = true}
pytest-cov  = { version = "^3.0.0", optional = true}
tox  = { version = "^3.25.0", optional = true}
virtualenv  = { version = "^20.2.2", optional = true}
pip  = { version = "^20.3.1", optional = true}
mkdocs  = { version = "^1.3.0", optional = true}
mkdocs-include-markdown-plugin  = { version = "^1.0.0", optional = true}
mkdocs-material  = { version = "^8.3.6", optional = true}
mkdocstrings  = { version = "^0.19.0", optional = true, extras = [ "python" ] }
mkdocs-material-extensions  = { version = "^1.0.3", optional = true}
twine  = { version = "^4.0.1", optional = true}
mkdocs-autorefs = {version = "^0.4.1", optional = true}
pre-commit = {version = "^2.19.0", optional = true}
toml = {version = "^0.10.2", optional = true}
bump2version = {version = "^1.0.1", optional = true}
Jinja2 = {version = "3.0.3", optional = true}
pytesseract = {version = "^0.3.9", optional = true}
ipykernel = {version = "^6.15.0", optional = true}

[tool.poetry.extras]
test = [
    "black",
    "flake8",
    "flake8-docstrings",
    "isort",
    "mypy",
    "pytesseract",
    "pytest",
    "pytest-cov"
    ]

dev = [
    "bump2version",
    "ipykernel",
    "pip",
    "pre-commit",
    "pytesseract",
    "toml",
    "tox",
    "twine",
    "virtualenv"
    ]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs",
    "Jinja2"
    ]




[tool.poetry.dev-dependencies]
[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
